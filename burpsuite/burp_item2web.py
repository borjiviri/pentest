#!/usr/bin/env python2
# jue ago 28 19:27:37 CEST 2014
# devnull@libcrack.so
#
# Reads an Burp Suite issues XML file and 
# creates the web hierarchy of the scoped 
# web site (imagina that you could dump the
# contents spidered by Burp's spider to the
# filesystem)

import os
import re
import sys
from base64 import b64decode
from xml.dom import minidom
import html2text
import urllib

if len(sys.argv) < 3:
    print ("\n\tUsage: %s <items.xml> <hostname>\n" % sys.argv[0])
    sys.exit(1)

filename = sys.argv[1]
scope = sys.argv[2:]
xmldoc = minidom.parse(filename)
results = {}
idict={}
written = []

if scope is not None:
    for host in scope:
        print("[*] scoping host: %s" % host)

try:
    itemlist = xmldoc.getElementsByTagName('item')
except Exception as e:
    raise Exception("%s does not contain items" % filename)

for item in itemlist:
       
    data = {}

    # data['time'] = item.getElementsByTagName('time')[0].firstChild.data
    # data['url'] = item.getElementsByTagName('url')[0].firstChild.data
    # data['host'] = item.getElementsByTagName('host')[0].firstChild.data
    # data['port'] = item.getElementsByTagName('port')[0].firstChild.data
    # data['protocol'] = item.getElementsByTagName('protocol')[0].firstChild.data    
    # data['method'] = item.getElementsByTagName('method')[0].firstChild.data
    # data['path'] = item.getElementsByTagName('path')[0].firstChild.data
    # data['extension'] = item.getElementsByTagName('extension')[0].firstChild.data    
    # data['request'] = b64decode(item.getElementsByTagName('request')[0].firstChild.data)
    # data['status'] = item.getElementsByTagName('status')[0].firstChild.data
    # data['responselength'] = item.getElementsByTagName('url')[0].firstChild.data
    # data['mimetype'] = item.getElementsByTagName('mimetype')[0].firstChild.data      
    # data['response'] = b64decode(item.getElementsByTagName('response')[0].firstChild.data)
    # data['comment'] = item.getElementsByTagName('comment')[0].firstChild.data        
    # data['referer'] = re.search(r"Referer:\s*(.*)\n", data['request']).groups()[0]
    # host = data['host']
    # path = data['path']
    
    time = item.getElementsByTagName('time')[0].firstChild.data
    host = item.getElementsByTagName('host')[0].firstChild.data
    extension = item.getElementsByTagName('extension')[0].firstChild.data
    path = item.getElementsByTagName('path')[0].firstChild.data
    resquest = b64decode(item.getElementsByTagName('request')[0].firstChild.data)
    response = b64decode(item.getElementsByTagName('response')[0].firstChild.data)
    
    if host in scope:
        print('[*] scope matched: %s' % host)    
        if not os.path.exists(host):
            print ("[*] Creating directory %s" % (host))
            os.makedirs(host)
            
        if path not in written:
            filepath = host + path
            print ("[*] Writing %s" % (filepath))        
            # strip response header and it write to file
            # content = response.split('\n')[:3]
            # f = open(filepath,'w')
            # f.write(content)
            # f.close()
            # written.append(path)
            
        mark = '\x0d\x0a\x0d\x0a'
        body_offset = response.index(mark) + 4

        x = raw_input('Enter> ')
        
#        match = re.compile(r"Set-Cookie:\s*(.*)\n")
#        groups = match.findall(response)
#        if groups: 
#            cookie = Cookie.SimpleCookie()
#            cookie.load(groups[0])
#            found_cookies[host].append(cookie)

#number = 0
#for host in sorted(idict.keys()):
#    print ("-------------------------------------[ HTTP Request Snip ]-------------------------------------")
#    print (" Instance number %s" % number)
#    print (" Host: %s" % idict[host]['host'])
#    print (" URL: %s" % urllib.unquote_plus(idict[host]['url']))
#    #print (" Referer: %s" % idict[host]['referer'])
#    print ("-------------------------------------[ HTTP Request Snip ]-------------------------------------")
#    print ("\n")
#    #print ("=============================================================================================")
#    #print ("\n[*] HTTP Request to %s :\n" % url)
#    ##print ("<code>")
#    #print ("-----------------------------------[ SNIP STARTS ]-----------------------------------") 
#    #print ("%s" % idict[host][''][0],)
#    #print ("------------------------------------[ SNIP ENDS ]------------------------------------")
#    ##print ("</code>")
#    #print
#    #print ("[*] HTTP Response to %s :" % url)
#    #print
#    ##print ("<code>")
#    #print ("-----------------------------------[ SNIP STARTS ]-----------------------------------")
#    #print ("%s" % idict[url][param][1],)
#    #print ("------------------------------------[ SNIP ENDS ]------------------------------------")
#    ##print ("</code>")
#    #print ("\n[*] Issue detail :\n")
#    #print ("%s\n\n" % idict[url][param][2])
#    number = number + 1
        
