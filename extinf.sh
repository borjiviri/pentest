#!/bin/bash
# borja@libcrack.so

# -- procedures ----------------------------------------------------------------

trap captura INT
function captura() {
        echo " Saliendo ... "
        exit 1
}

function negrita() { 
    BOLD="\033[1m"
    RESET="\033[0m"
    echo -e "${BOLD}${@}${RESET}"; 
}

function die(){
    negrita "$@"
    exit -1
}

wordlists="/usr/share/dirb/wordlists"
test -d "$wordlists" || die "ERROR: $wordlists NOT FOUND"

tools="
nmap
udp-proto-scanner.pl
iker.py
gnmapservice.pl
sslscan
ssl-cipher-suite-enum.pl
nikto
dirb
hoppy
heartbleed
"

for t in $tools; do 
    which "$t" > /dev/null ||  die "ERROR: $t NOT FOUND"
done

exit 1

# -- variables -..---------------------------------------------------------------

tfile="${1}"
test -z ${tfile} && negrita "\n\tUsage: $0 <targets.txt>\n" && exit 1

# nmap
negrita "[*] Launching nmap proto -iL ${tfile}"
screen -S nmap_proto sudo nmap -Pn -sO -vvv -d --reason --initial-rtt-timeout 80ms --max-rtt-timeout 500ms --max-retries 6 --max-scan-delay 10ms -oA nmap_proto -iL ${tfile} --min-parallelism 64 --min-hostgroup 64

negrita "[*] Launching nmap udp -iL ${tfile}"
screen  -S nmap_udp sudo nmap -Pn -p- -sU -sV -vvv -d --reason --initial-rtt-timeout 80ms --max-rtt-timeout 500ms --max-retries 6 --max-scan-delay 10ms -oA nmap_udp -iL ${tfile} --min-parallelism 64 --min-hostgroup 64 

negrita "[*] Launching nmap tcp -iL ${tfile}"
screen -S nmap_tcp sudo nmap -Pn -p- -sS -O -sV -sC -vvv -d --reason --initial-rtt-timeout 80ms --max-rtt-timeout 500ms --max-retries 6 --max-scan-delay 10ms --defeat-rst-ratelimit -oA nmap_tcp -iL ${tfile} --min-parallelism 64 --min-hostgroup 64 

# UDP proto scan
negrita "[*] Launching udp-proto-scanner.pl --file ${tfile}"
screen -S udp_proto_scan sudo udp-proto-scanner.pl --file ${tfile} | tee udp-proto-scanner.log

# ipsec VPN
negrita "[*] Launching iker -i ${tfile}"
screen -S iker sudo python iker.py -i ${tfile} -o iker.log -x iker.xml

# wait for nmap to finish
negrita "[*] Waiting for nmap to finish ... "
while true; do
    # test -f nmap_tcp.nmap && break
    screen -ls | grep nmap_tcp > /dev/null 2>&1 || break
    sleep 1
    echo -n .
done

echo "[*] Nmap TCP finished :-D"

# gnmapservice.pl nmap_tcp.gnmap
# ---------------------------------------------------------------------------
# 254.194.134.42:64002   (tcp) Service: -    Banner: -
# 254.172.15.157:64000   (tcp) Service: -    Banner: -
# 254.172.15.157:64002   (tcp) Service: -    Banner: -
# 254.172.15.157:9090    (tcp) Service: http Banner: Jetty 8.y.z-SNAPSHOT
# 254.194.134.42:64000   (tcp) Service: -    Banner: -
# 254.194.134.42:80      (tcp) Service: http Banner: nginx 1.1.19
# ---------------------------------------------------------------------------

echo
# extract https services
negrita "[*] Parsing HTTPS/SSL services"
gnmapservice.pl nmap_tcp.gnmap | egrep 'https|ssl' | awk '{print $1}' > targets_https.txt

# SSL checks
while read ip; do 
    negrita "[*] Launching sslscan ${ip}"
    # screen -d -m -S "sslscan_${ip}" sslscan --xml=sslscan_${ip}.xml ${ip} | tee sslscan_${ip}.out
    screen -d -m -L -S "sslscan_${ip}" sslscan --xml="sslscan_${ip}.xml" ${ip}

    negrita "[*] Launching ssl-cipher-suite-enum.pl ${ip}"
    screen -d -m -S "sslcipher_${ip}" ssl-cipher-suite-enum.pl --outfile "ssl-cipher-suite-enum_${ip}.log" ${ip}

    negrita "[*] Launching SSL nikto ${ip}"
    screen -d -m -S "nikto_${ip}" nikto -host "${ip}" -output "nikto_ssl_${ip}.log" -Format txt -C all -ssl

    negrita "[*] Launching SSL dirb ${ip} apache"
    screen -d -m -S "dirb_${ip}_apache" dirb "https://${ip}/" "$wordlists/vulns/apache.txt" -o "dirb_apache_ssl_${ip}.log"

    negrita "[*] Launching SSL dirb ${ip} common"
    screen -d -m -S "dirb_${ip}_common" dirb "https://${ip}/" "$wordlists/common.txt" -o "dirb_common_ssl_${ip}.log"

    negrita "[*] Launching SSL hoppy ${ip}"
    screen -d -m -S "hoppy_${ip}" hoppy -S "hoppy_ssl_${ip}" -h "https://${ip}"

    negrita "[*] Launching SSL heartbleed ${ip}"
    ip1=$(echo ${ip} | cut -f1 -d:)
    port1=$(echo ${ip} | cut -f2 -d:)
    # heartbleed --server ${ip1} --port ${port1} --file "heartbleed_${ip}.out" --type 1
    screen -d -m -S "heartbleed_${ip}" heartbleed --server "${ip1}" --port "${port1}" --file "heartbleed_${ip}.out" --type 1

done < targets_https.txt

# extract http services
negrita "[*] Parsing HTTP services"
gnmapservice.pl nmap_tcp.gnmap | grep http | egrep -v 'https|ssl' | awk '{print $1}' > targets_http.txt

# http checks
while read ip; do 
    negrita "[*] Launching nikto ${ip}"
    screen -d -m -S "nikto_${ip}" nikto -host ${ip} -output nikto_${ip}.log -Format txt -C all

    negrita "[*] Launching dirb ${ip} apache"
    screen -d -m -S "dirb_${ip}_apache" dirb "http://${ip}/" "$wordlists/vulns/apache.txt" -o "dirb_apache_${ip}.log"

    negrita "[*] Launching dirb ${ip} common"
    screen -d -m -S "dirb_${ip}_common" dirb "http://${ip}/" "$wordlists/common.txt" -o "dirb_common_${ip}.log"

    negrita "[*] Launching hoppy ${ip}"
    screen -d -m -S "hoppy_${ip}" hoppy -S "hoppy_${ip}" -h "http://${ip}"
done < targets_http.txt


negrita "[*] All tools launched"
negrita "------------------------"
screen -ls
negrita "------------------------"
echo
negrita "Now launch Nessus against:"
cat ${tfile}
negrita "------------------------"

